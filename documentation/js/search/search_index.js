var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.145,1,2.11]],["body/controllers/AppController.html",[0,1.776,1,3.272,2,1.393,3,0.348,4,0.302,5,0.302,6,3.302,7,0.61,8,1.52,9,4.881,10,1.507,11,0.03,12,0.798,13,3.941,14,1.192,15,2.258,16,0.505,17,0.669,18,2.957,19,3.302,20,0.348,21,0.05,22,1.928,23,3.302,24,1.288,25,3.941,26,0.023,27,0.023]],["title/modules/AppModule.html",[28,0.98,29,2.11]],["body/modules/AppModule.html",[1,2.935,2,1.356,3,0.234,4,0.203,5,0.203,11,0.03,16,0.6,17,0.45,18,2.919,19,2.222,20,0.234,21,0.034,26,0.018,27,0.018,28,1.363,29,4.1,30,1.098,31,1.098,32,1.297,33,1.297,34,1.098,35,2.204,36,1.297,37,2.222,38,2.222,39,2.222,40,3.209,41,3.209,42,3.209,43,2.454,44,3.209,45,1.876,46,1.297,47,1.297,48,2.652,49,2.498,50,2.652,51,2.652,52,2.652,53,2.652,54,2.652,55,2.652,56,2.222,57,2.222,58,2.222,59,2.652,60,2.652,61,2.652,62,2.652,63,2.652,64,2.652]],["title/injectables/AppService.html",[18,1.732,65,0.838]],["body/injectables/AppService.html",[3,0.368,4,0.319,5,0.319,7,0.645,8,1.575,9,4.982,11,0.029,12,0.844,14,1.262,15,2.34,16,0.419,17,0.708,18,2.784,20,0.368,21,0.053,24,1.364,26,0.024,27,0.024,65,1.347,66,1.874,67,3.495,68,4.171,69,4.171,70,4.171]],["title/controllers/AuthController.html",[0,1.145,71,2.11]],["body/controllers/AuthController.html",[0,0.75,2,0.75,3,0.187,4,0.163,5,0.365,7,0.328,8,0.983,10,1.691,11,0.03,12,0.896,14,1.338,16,0.526,17,0.36,20,0.187,21,0.027,22,1.038,24,1.446,26,0.015,27,0.015,71,2.116,72,1.778,73,1.382,74,2.123,75,2.619,76,2.723,77,2.723,78,2.723,79,2.723,80,2.123,81,3.949,82,2.123,83,2.123,84,1.832,85,1.691,86,0.943,87,1.691,88,4.215,89,2.164,90,1.778,91,2.599,92,2.123,93,2.123,94,2.881,95,2.123,96,2.123,97,2.123,98,1.778,99,2.599,100,2.123,101,2.123,102,1.552,103,1.552,104,1.552,105,1.778,106,1.552,107,3.25,108,3.25,109,2.111,110,1.778,111,1.778,112,1.778,113,1.247,114,2.123,115,2.123,116,1.778,117,1.778,118,3.25,119,2.123,120,2.123,121,2.376,122,2.123,123,2.123,124,2.164,125,2.123,126,2.123,127,2.123,128,2.123,129,2.723,130,2.123,131,2.123,132,2.123,133,2.123,134,2.123,135,2.123,136,2.123,137,2.123,138,2.123,139,2.123,140,2.123,141,2.123,142,2.123,143,2.123,144,2.123,145,2.123,146,2.123]],["title/classes/AuthGuard.html",[21,0.041,113,1.904]],["body/classes/AuthGuard.html",[3,0.299,4,0.259,5,0.259,7,0.523,8,1.375,11,0.03,12,0.92,14,1.375,16,0.457,17,0.574,20,0.299,21,0.043,24,1.486,26,0.021,27,0.021,84,1.882,85,1.737,86,0.807,87,1.737,113,3.017,147,1.4,148,2.834,149,4.546,150,4.546,151,4.546,152,5.49,153,3.382,154,3.382,155,4.546,156,4.187,157,3.382,158,5.135,159,4.546,160,3.382,161,2.203,162,2.203,163,3.382,164,3.382,165,2.834,166,2.472]],["title/modules/AuthModule.html",[28,0.98,40,1.904]],["body/modules/AuthModule.html",[2,1.44,3,0.255,4,0.221,5,0.221,11,0.03,16,0.593,17,0.49,20,0.255,21,0.037,26,0.019,27,0.019,28,1.429,30,1.195,31,1.195,32,1.411,33,1.411,34,1.195,35,2.31,36,1.411,40,3.571,43,2.524,45,1.993,46,1.411,47,1.411,49,2.654,71,3.076,109,3.003,110,2.418,156,2.11,161,1.879,167,2.418,168,2.886,169,2.418,170,3.3,171,2.886,172,2.886,173,2.11,174,2.886,175,2.886,176,2.11,177,1.695,178,2.11,179,2.886,180,2.886,181,2.886,182,2.11,183,2.886,184,2.886,185,2.418,186,2.886,187,2.11,188,2.11,189,2.886,190,2.418,191,2.418]],["title/injectables/AuthService.html",[65,0.838,109,1.732]],["body/injectables/AuthService.html",[3,0.132,4,0.114,5,0.114,7,0.231,8,0.743,11,0.03,12,0.873,14,1.213,16,0.458,17,0.254,20,0.132,21,0.019,22,0.73,24,1.311,26,0.011,27,0.011,65,0.636,66,0.671,75,2.389,76,3.82,77,2.623,78,2.059,79,2.623,84,1.786,85,1.821,86,1.03,87,1.649,89,1.774,90,2.059,91,2.132,94,2.612,98,2.059,99,2.132,109,1.314,111,1.251,112,1.251,124,2.329,156,1.797,165,3.36,166,2.932,176,1.092,177,0.878,178,1.092,187,1.092,188,1.092,190,1.251,191,1.251,192,1.251,193,2.458,194,2.458,195,0.973,196,1.092,197,1.63,198,4.559,199,1.494,200,1.6,201,2.458,202,1.494,203,1.251,204,1.494,205,2.458,206,2.534,207,1.494,208,4.011,209,1.494,210,2.458,211,1.494,212,2.458,213,1.092,214,1.092,215,1.494,216,1.494,217,1.251,218,1.251,219,3.333,220,3.628,221,3.628,222,2.356,223,2.458,224,1.494,225,1.494,226,1.494,227,1.494,228,1.494,229,1.494,230,1.494,231,1.494,232,2.652,233,1.797,234,2.039,235,2.289,236,1.494,237,2.458,238,1.494,239,2.458,240,2.458,241,1.494,242,1.494,243,2.458,244,1.494,245,1.494,246,1.494,247,1.494,248,1.494,249,1.494,250,1.494,251,1.494,252,1.092,253,1.494,254,1.494,255,3.131,256,1.84,257,1.494,258,3.628,259,1.494,260,1.092,261,1.494,262,1.494,263,2.458,264,1.494,265,1.494,266,1.494,267,1.251,268,1.494,269,1.494]],["title/classes/Company.html",[21,0.041,270,1.904]],["body/classes/Company.html",[3,0.425,4,0.368,5,0.368,11,0.028,20,0.425,21,0.061,26,0.026,27,0.026,147,1.991,270,3.336,271,4.029]],["title/controllers/CompanyController.html",[0,1.145,272,2.11]],["body/controllers/CompanyController.html",[0,0.804,2,0.804,3,0.201,4,0.174,5,0.174,7,0.352,8,1.036,10,1.88,11,0.03,12,0.996,14,1.488,16,0.461,17,0.387,20,0.201,21,0.029,22,1.113,23,1.907,24,1.608,26,0.016,27,0.016,73,1.482,75,2.74,84,1.899,85,1.753,86,0.818,87,1.753,89,2.405,102,2.505,103,2.505,104,1.664,106,1.664,121,1.664,124,2.405,256,3.037,270,1.337,272,2.232,273,1.907,274,2.505,275,3.842,276,2.871,277,2.871,278,2.871,279,2.276,280,2.762,281,2.276,282,2.276,283,2.276,284,1.907,285,3.427,286,2.276,287,1.907,288,3.427,289,2.276,290,1.907,291,3.243,292,3.427,293,2.276,294,2.276,295,1.907,296,1.907,297,2.203,298,1.907,299,1.907,300,2.505,301,1.907,302,2.276,303,2.276,304,2.276,305,2.276,306,2.276,307,2.276,308,2.276,309,2.276,310,2.276,311,2.276]],["title/modules/CompanyModule.html",[28,0.98,41,1.904]],["body/modules/CompanyModule.html",[2,1.639,3,0.308,4,0.267,5,0.267,11,0.03,16,0.559,17,0.592,20,0.308,21,0.045,26,0.021,27,0.021,28,1.577,30,1.444,31,1.444,32,1.705,33,1.705,34,1.444,35,2.55,36,1.705,41,3.624,43,2.674,45,2.269,46,1.705,47,1.705,49,3.021,173,2.549,272,3.395,297,3.18,298,2.922,312,2.922,313,2.922,314,3.487,315,3.487,316,3.487]],["title/injectables/CompanyService.html",[65,0.838,297,1.732]],["body/injectables/CompanyService.html",[3,0.174,4,0.151,5,0.151,7,0.305,8,0.929,11,0.03,12,0.989,14,1.395,16,0.428,17,0.335,20,0.174,21,0.025,22,0.965,24,1.508,26,0.014,27,0.014,65,0.794,66,0.887,75,2.667,84,1.91,85,1.763,86,1.101,87,1.763,89,2.256,94,3.732,124,2.256,195,1.285,196,1.443,197,1.913,200,2.001,206,3.183,213,1.443,214,1.443,219,2.246,232,3.372,233,2.246,234,2.456,235,2.757,256,3.183,260,2.757,270,1.805,274,2.246,275,3.567,276,2.574,277,2.574,278,2.574,280,2.275,284,2.574,287,2.574,290,2.574,291,2.501,297,1.642,299,1.653,300,2.246,301,1.653,317,1.653,318,1.973,319,3.072,320,1.973,321,1.973,322,1.973,323,1.973,324,1.973,325,1.973,326,3.772,327,1.973,328,3.072,329,1.973,330,1.973,331,1.973,332,1.653,333,1.973,334,1.653]],["title/classes/CreateCompanyDto.html",[21,0.041,280,1.732]],["body/classes/CreateCompanyDto.html",[3,0.284,4,0.246,5,0.246,7,0.498,10,2.055,11,0.029,12,1.088,15,2.721,16,0.323,20,0.284,21,0.056,26,0.02,27,0.02,86,1.284,87,2.221,147,1.332,222,2.94,280,2.348,335,4.717,336,2.351,337,2.149,338,5.004,339,5.004,340,5.004,341,4.393,342,3.216,343,3.216,344,3.216,345,3.216,346,3.216,347,3.216,348,3.212,349,2.861,350,4.505,351,3.308,352,1.719]],["title/classes/CreateTaskDTO.html",[21,0.041,353,1.904]],["body/classes/CreateTaskDTO.html",[3,0.328,4,0.285,5,0.285,7,0.575,10,1.85,11,0.029,12,1.089,15,2.561,16,0.374,20,0.328,21,0.062,26,0.022,27,0.022,86,1.284,147,1.539,206,2.843,337,2.367,349,3.504,351,3.161,352,1.987,353,2.843,354,3.115,355,3.933,356,4.508,357,4.508,358,3.718,359,4.055,360,3.718,361,3.718]],["title/injectables/JwtStrategy.html",[65,0.838,170,1.904]],["body/injectables/JwtStrategy.html",[3,0.292,4,0.253,5,0.253,7,0.512,8,1.355,11,0.03,12,0.907,14,1.001,16,0.547,17,0.562,20,0.292,21,0.042,24,1.082,26,0.02,27,0.02,65,1.159,66,1.488,75,2.282,84,1.371,85,1.266,86,0.79,87,1.266,89,1.619,161,2.156,162,2.156,170,2.633,177,1.945,178,2.42,182,3.276,185,2.774,188,2.42,195,3.308,203,2.774,222,1.945,256,1.945,362,2.774,363,4.481,364,3.311,365,4.481,366,3.311,367,3.311,368,3.311,369,3.311,370,2.774,371,3.311,372,3.311,373,3.311,374,3.311,375,3.311,376,3.311,377,3.311,378,3.311,379,2.774,380,3.311]],["title/controllers/LatihanController.html",[0,1.145,381,2.11]],["body/controllers/LatihanController.html",[0,1.4,2,1.4,3,0.35,4,0.303,5,0.303,7,0.613,8,1.525,10,1.514,11,0.03,12,0.802,14,1.198,16,0.507,17,0.673,20,0.35,21,0.051,22,1.937,24,1.295,26,0.023,27,0.023,73,2.58,381,3.283,382,3.319,383,3.319,384,4.89,385,3.961,386,2.964,387,3.319,388,3.961,389,3.961]],["title/modules/LatihanModule.html",[28,0.98,42,1.904]],["body/modules/LatihanModule.html",[2,1.721,3,0.332,4,0.287,5,0.287,11,0.029,16,0.543,17,0.637,20,0.332,21,0.048,26,0.022,27,0.022,28,1.635,30,1.554,31,1.554,32,1.836,33,1.836,34,1.554,35,2.643,36,1.836,42,3.568,45,2.381,46,1.836,47,1.836,381,3.52,386,3.246,387,3.145,390,3.145,391,3.145,392,3.753,393,3.753]],["title/injectables/LatihanService.html",[65,0.838,386,1.732]],["body/injectables/LatihanService.html",[3,0.361,4,0.313,5,0.313,7,0.632,8,1.555,11,0.03,12,0.827,14,1.235,15,1.835,16,0.411,17,0.694,20,0.361,21,0.052,24,1.335,26,0.023,27,0.023,65,1.329,66,1.835,234,3.347,383,3.422,384,4.945,386,2.747,394,3.422,395,4.085]],["title/classes/LoginDTO.html",[21,0.041,91,1.904]],["body/classes/LoginDTO.html",[3,0.335,4,0.29,5,0.29,7,0.586,10,1.873,11,0.029,12,0.992,15,2.579,16,0.381,20,0.335,21,0.063,26,0.022,27,0.022,86,1.17,91,2.879,147,1.569,222,3.19,252,3.969,337,2.396,348,3.582,349,3.536,351,2.879,352,2.025,396,3.175,397,3.175,398,3.79,399,3.79,400,3.79,401,3.175,402,3.175,403,3.79,404,3.175]],["title/modules/PrismaModule.html",[28,0.98,43,1.456]],["body/modules/PrismaModule.html",[3,0.328,4,0.285,5,0.285,11,0.029,16,0.487,17,0.631,20,0.328,21,0.048,26,0.022,27,0.022,28,1.627,30,1.539,31,1.539,32,1.818,33,1.818,34,1.539,35,2.631,36,2.631,43,2.772,45,2.367,46,1.818,47,1.818,197,2.905,405,3.115,406,3.115,407,3.115,408,3.718,409,3.718]],["title/injectables/PrismaService.html",[65,0.838,197,1.456]],["body/injectables/PrismaService.html",[3,0.3,4,0.26,5,0.26,7,0.525,8,1.379,11,0.03,12,0.923,14,1.379,16,0.458,17,0.577,20,0.3,21,0.043,26,0.021,27,0.021,65,1.179,66,1.526,75,2.711,84,1.406,85,1.298,86,0.811,87,1.298,124,2.23,162,2.969,197,2.048,410,2.846,411,5.146,412,4.559,413,5.906,414,4.559,415,5.5,416,3.397,417,2.846,418,3.397,419,2.846,420,3.397,421,3.397,422,3.397,423,3.397]],["title/classes/RegisterDTO.html",[21,0.041,99,1.904]],["body/classes/RegisterDTO.html",[3,0.314,4,0.272,5,0.272,7,0.549,10,2.011,11,0.029,12,1.065,15,2.687,16,0.357,20,0.314,21,0.06,26,0.021,27,0.021,85,2.011,86,1.256,99,2.758,147,1.47,222,3.091,252,3.845,337,2.296,348,3.432,349,3.645,351,3.091,352,1.897,359,2.974,397,2.974,401,2.974,402,2.974,404,2.974,424,2.974,425,3.55,426,3.55,427,3.55,428,3.55,429,3.55]],["title/controllers/TaskController.html",[0,1.145,430,2.11]],["body/controllers/TaskController.html",[0,0.782,2,0.782,3,0.195,4,0.169,5,0.169,7,0.342,8,1.014,10,1.857,11,0.03,12,0.983,14,1.469,16,0.488,17,0.376,20,0.195,21,0.028,22,1.082,24,1.588,26,0.015,27,0.015,73,1.441,75,2.726,84,1.871,85,1.728,86,0.801,87,1.728,89,2.376,102,3.999,103,2.452,104,1.617,105,1.853,106,1.617,113,1.3,121,2.452,124,2.376,129,4.07,295,1.853,296,1.853,353,2.656,430,2.184,431,1.853,432,1.853,433,2.81,434,2.81,435,3.787,436,2.81,437,2.81,438,2.212,439,2.212,440,2.212,441,1.853,442,2.212,443,2.212,444,4.283,445,2.212,446,2.212,447,1.853,448,2.212,449,2.212,450,1.853,451,2.656,452,2.212,453,2.212,454,2.212,455,2.165,456,1.853,457,1.853,458,1.853,459,2.212,460,2.212,461,2.212,462,2.212,463,2.212,464,2.212,465,2.212,466,2.212,467,2.212,468,2.212,469,2.212,470,2.212,471,2.212,472,2.212]],["title/modules/TaskModule.html",[28,0.98,44,1.904]],["body/modules/TaskModule.html",[2,1.639,3,0.308,4,0.267,5,0.267,11,0.03,16,0.559,17,0.592,20,0.308,21,0.045,26,0.021,27,0.021,28,1.577,30,1.444,31,1.444,32,1.705,33,1.705,34,1.444,35,2.55,36,1.705,43,2.674,44,3.624,45,2.269,46,1.705,47,1.705,49,3.021,173,2.549,430,3.395,455,3.18,456,2.922,473,2.922,474,3.487,475,2.922,476,3.487,477,3.487]],["title/injectables/TaskService.html",[65,0.838,455,1.732]],["body/injectables/TaskService.html",[3,0.166,4,0.144,5,0.144,7,0.291,8,0.896,11,0.03,12,0.97,14,1.365,16,0.482,17,0.503,20,0.166,21,0.024,24,1.475,26,0.014,27,0.014,65,0.766,66,0.846,75,2.642,84,1.868,85,1.725,86,0.991,87,1.725,88,3.067,89,2.207,94,3.742,124,2.207,195,1.929,196,1.377,197,1.865,200,1.929,206,2.815,213,1.377,214,1.377,218,2.482,219,2.165,232,2.165,233,1.377,234,2.384,235,2.676,256,2.151,260,1.377,267,1.578,332,1.578,334,1.578,353,2.438,355,2.165,432,4.199,433,2.482,434,2.482,435,3.477,436,2.482,437,2.482,441,2.482,444,4.014,447,2.482,450,2.482,451,2.438,455,1.583,457,1.578,458,1.578,478,1.578,479,1.884,480,2.962,481,1.884,482,1.884,483,1.884,484,1.884,485,1.884,486,1.578,487,1.884,488,1.884,489,2.962,490,4.15,491,1.884,492,1.884,493,1.884,494,1.884,495,1.884,496,1.884]],["title/classes/UpdateCompanyDto.html",[21,0.041,291,1.904]],["body/classes/UpdateCompanyDto.html",[3,0.389,4,0.337,5,0.337,11,0.029,16,0.541,20,0.389,21,0.056,26,0.025,27,0.025,147,1.824,162,2.869,274,3.22,280,2.354,291,3.164,300,3.22,336,3.22,497,3.691,498,4.405,499,3.691,500,3.691,501,4.405]],["title/classes/UpdateTaskDTO.html",[21,0.041,451,1.904]],["body/classes/UpdateTaskDTO.html",[3,0.328,4,0.285,5,0.285,7,0.575,10,1.85,11,0.029,12,1.089,15,2.561,16,0.374,20,0.328,21,0.062,26,0.022,27,0.022,86,1.284,147,1.539,206,2.843,337,2.367,350,4.508,351,3.161,352,1.987,355,3.933,356,4.508,357,4.508,451,2.843,502,3.115,503,3.718,504,4.839,505,3.718,506,3.718]],["title/coverage.html",[507,3.228]],["body/coverage.html",[0,1.851,1,1.727,5,0.203,6,2.222,11,0.03,18,1.418,21,0.074,26,0.018,27,0.018,34,1.098,65,1.456,67,2.222,71,1.727,72,2.222,86,0.633,91,1.558,99,1.558,109,1.418,113,1.558,148,2.222,166,1.939,170,1.558,177,1.558,192,2.222,197,1.192,270,1.558,271,2.222,272,1.727,273,2.222,280,1.418,291,1.558,297,1.418,317,2.222,335,2.222,336,2.804,353,1.558,354,2.222,362,2.222,381,1.727,382,2.222,386,1.418,394,2.222,396,2.222,410,2.222,424,2.222,430,1.727,431,2.222,451,1.558,455,1.418,478,2.222,497,2.222,502,2.222,507,1.939,508,2.652,509,2.652,510,2.652,511,6.456,512,4.939,513,3.836,514,4.939,515,4.507,516,4.507,517,3.836,518,4.939,519,2.222,520,2.652,521,2.222,522,2.652,523,2.652,524,2.652]],["title/dependencies.html",[31,1.613,525,2.27]],["body/dependencies.html",[11,0.03,17,0.637,21,0.062,26,0.022,27,0.022,31,1.554,56,3.145,57,3.145,116,3.145,117,3.145,161,2.444,176,2.744,182,2.744,200,2.444,217,3.145,352,2.006,370,4.08,419,3.145,486,3.145,499,3.145,500,3.145,526,5.405,527,3.753,528,3.753,529,3.753,530,4.869,531,3.753,532,3.753,533,3.753,534,3.753,535,3.753,536,3.753,537,3.753,538,3.753,539,3.753,540,3.753,541,3.753]],["title/miscellaneous/functions.html",[542,1.765,543,3.264]],["body/miscellaneous/functions.html",[7,0.753,11,0.026,26,0.026,27,0.026,34,2.514,521,4.079,542,3.171,543,4.079,544,4.869]],["title/index.html",[7,0.419,545,2.71,546,2.71]],["body/index.html",[4,0.245,11,0.029,26,0.02,27,0.02,58,2.684,417,2.684,507,2.341,547,3.203,548,3.203,549,4.381,550,3.203,551,3.203,552,3.203,553,3.203,554,3.203,555,3.203,556,2.684,557,4.993,558,3.203,559,3.203,560,3.203,561,3.203,562,5.942,563,3.203,564,3.203,565,5.804,566,3.203,567,3.203,568,4.381,569,3.203,570,3.203,571,3.203,572,3.203,573,4.381,574,4.381,575,3.203,576,3.203,577,3.203,578,4.381,579,4.381,580,3.203,581,3.203,582,3.203,583,3.203,584,3.203,585,2.684,586,3.203,587,3.203,588,3.203,589,3.203,590,3.203,591,3.203,592,3.203,593,3.203,594,3.203,595,2.684,596,3.203,597,3.203,598,3.203,599,3.203,600,3.203,601,3.203,602,2.684]],["title/modules.html",[30,1.828]],["body/modules.html",[11,0.024,26,0.024,27,0.024,29,2.775,30,1.764,40,2.504,41,2.504,42,2.504,43,1.915,44,2.504,585,5.257,603,6.275,604,6.275,605,6.275]],["title/overview.html",[606,3.7]],["body/overview.html",[2,0.994,11,0.029,18,2.49,26,0.018,27,0.018,28,0.851,29,4.086,30,1.165,31,1.165,32,1.376,33,1.376,34,1.165,35,1.376,36,1.376,37,2.357,38,2.357,39,2.357,40,3.502,41,3.367,42,3.15,43,2.678,44,3.367,45,1.957,46,1.376,47,1.376,66,1.264,109,2.49,147,1.165,167,2.357,169,2.357,170,2.737,197,2.575,297,2.49,312,2.357,313,2.357,386,2.49,390,2.357,391,2.357,405,2.357,406,2.357,407,2.357,455,2.49,473,2.357,475,2.357,606,2.357,607,2.814,608,2.814,609,2.814,610,2.814]],["title/properties.html",[337,1.905,525,2.27]],["body/properties.html",[11,0.029,26,0.026,27,0.026,337,2.338,556,4.005,595,4.005,602,4.005,611,4.78,612,4.78,613,4.78]],["title/miscellaneous/variables.html",[542,1.765,614,3.264]],["body/miscellaneous/variables.html",[7,0.705,11,0.029,26,0.025,27,0.025,86,1.088,177,3.231,187,3.332,379,3.819,519,3.819,542,2.968,614,3.819,615,4.558,616,4.558,617,4.558,618,4.558,619,4.558,620,4.558]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":612,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["200",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["3.0.1",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["4.15.0",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":608,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":607,"title":{},"body":{"overview.html":{}}}],["7",{"_index":609,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":610,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["accesstoken",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":338,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["amazing",{"_index":586,"title":{},"body":{"index.html":{}}}],["app",{"_index":417,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":423,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":555,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["atau",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":71,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":113,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":160,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":163,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":595,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":109,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["avatar(@req",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/PrismaService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":587,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":605,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":603,"title":{},"body":{"modules.html":{}}}],["building",{"_index":550,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":149,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":151,"title":{},"body":{"classes/AuthGuard.html":{}}}],["cb",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["class",{"_index":21,"title":{"classes/AuthGuard.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":147,"title":{},"body":{"classes/AuthGuard.html":{},"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":312,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_imports",{"_index":314,"title":{},"body":{"modules/CompanyModule.html":{}}}],["cluster_companymodule_providers",{"_index":313,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_latihanmodule",{"_index":390,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":391,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":405,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":407,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":406,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":473,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":474,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":475,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cocok",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["companies",{"_index":328,"title":{},"body":{"injectables/CompanyService.html":{}}}],["company",{"_index":270,"title":{"classes/Company.html":{}},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["company.controller",{"_index":316,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.dto",{"_index":300,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":336,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":346,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:15",{"_index":342,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:19",{"_index":347,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:6",{"_index":344,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.service",{"_index":298,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["company_name",{"_index":339,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["companycontroller",{"_index":272,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companymodule",{"_index":41,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules.html":{},"overview.html":{}}}],["companyservice",{"_index":297,"title":{"injectables/CompanyService.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"coverage.html":{},"overview.html":{}}}],["compare",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/LatihanController.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":154,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/LatihanController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/LatihanController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('company",{"_index":302,"title":{},"body":{"controllers/CompanyController.html":{}}}],["controller('latihan",{"_index":388,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller('task",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":507,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":274,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/UpdateCompanyDto.html":{}}}],["create(@body",{"_index":303,"title":{},"body":{"controllers/CompanyController.html":{}}}],["create(createcompanydto",{"_index":279,"title":{},"body":{"controllers/CompanyController.html":{}}}],["create(data",{"_index":319,"title":{},"body":{"injectables/CompanyService.html":{}}}],["createcompanydto",{"_index":280,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["createtask",{"_index":433,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":461,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":438,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":480,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":353,"title":{"classes/CreateTaskDTO.html":{}},"body":{"classes/CreateTaskDTO.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["data",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["data.email",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":489,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"controllers/LatihanController.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDTO.html":{}}}],["default",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{}}}],["delete",{"_index":296,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TaskController.html":{}}}],["delete('/:task_id",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":288,"title":{},"body":{"controllers/CompanyController.html":{}}}],["deletetaskbyid",{"_index":434,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":441,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":556,"title":{},"body":{"index.html":{},"properties.html":{}}}],["destination",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":564,"title":{},"body":{"index.html":{}}}],["dibuat",{"_index":327,"title":{},"body":{"injectables/CompanyService.html":{}}}],["dihapus",{"_index":334,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["diperbarui",{"_index":332,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["diskstorage",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["ditambahkan",{"_index":492,"title":{},"body":{"injectables/TaskService.html":{}}}],["ditemukan",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["documentation",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":299,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["dto/create.task.dto",{"_index":457,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":301,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["dto/update.task.dto",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":575,"title":{},"body":{"index.html":{}}}],["efbgwkgrukeghiuhusabvaubuuvubveudbvur",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":551,"title":{},"body":{"index.html":{}}}],["email",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateCompanyDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["enableshutdownhooks",{"_index":412,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":414,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":158,"title":{},"body":{"classes/AuthGuard.html":{}}}],["executioncontext",{"_index":152,"title":{},"body":{"classes/AuthGuard.html":{}}}],["expired",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":162,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateCompanyDto.html":{}}}],["extractjwt",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{}}}],["file.filename",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":275,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["findone",{"_index":276,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["findone(@param('id",{"_index":306,"title":{},"body":{"controllers/CompanyController.html":{}}}],["findone(id",{"_index":284,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["found",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":549,"title":{},"body":{"index.html":{}}}],["function",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":543,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":285,"title":{},"body":{"controllers/CompanyController.html":{}}}],["get('profile",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalltask",{"_index":435,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlatihan",{"_index":384,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["gettaskbyid",{"_index":436,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":447,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":545,"title":{"index.html":{}},"body":{}}],["grow",{"_index":582,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":150,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":155,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":592,"title":{},"body":{"index.html":{}}}],["heru",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["httpexception",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('bad",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('email",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('pengguna",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":599,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_request",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.created",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.found",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.unauthorized",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":355,"title":{},"body":{"classes/CreateTaskDTO.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{}}}],["identifier",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":420,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/TaskModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":415,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["inject",{"_index":487,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":488,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":65,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":561,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":563,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":348,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["isnotempty",{"_index":349,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["isnotempty()@isemail",{"_index":397,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["isnotempty()@isstring",{"_index":359,"title":{},"body":{"classes/CreateTaskDTO.html":{},"classes/RegisterDTO.html":{}}}],["isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":399,"title":{},"body":{"classes/LoginDTO.html":{}}}],["isnotempty()@isstring()@minlength(8)@maxlength(20",{"_index":427,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["isoptional",{"_index":350,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["isoptional()@isstring",{"_index":504,"title":{},"body":{"classes/UpdateTaskDTO.html":{}}}],["isstring",{"_index":351,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateTaskDTO.html":{}}}],["isstring()@isnotempty",{"_index":343,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["isstring()@isoptional",{"_index":341,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":345,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["join",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":170,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":596,"title":{},"body":{"index.html":{}}}],["latihan",{"_index":383,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["latihan.controller",{"_index":393,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":387,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["latihancontroller",{"_index":381,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":42,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":386,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":602,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":579,"title":{},"body":{"index.html":{}}}],["login",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":91,"title":{"classes/LoginDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDTO.html":{},"coverage.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":402,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["maxlength(20",{"_index":404,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["message",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/LatihanService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":401,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["minlength(6",{"_index":403,"title":{},"body":{"classes/LoginDTO.html":{}}}],["minlength(8",{"_index":429,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["miscellaneous",{"_index":542,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":578,"title":{},"body":{"index.html":{}}}],["mode",{"_index":568,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":591,"title":{},"body":{"index.html":{}}}],["multer",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":597,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":557,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":601,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":486,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":499,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":161,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":166,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["node.js",{"_index":548,"title":{},"body":{"index.html":{}}}],["npm",{"_index":562,"title":{},"body":{"index.html":{}}}],["number",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"classes/CreateTaskDTO.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{}}}],["object",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":413,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":580,"title":{},"body":{"index.html":{}}}],["optional",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":606,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":525,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":295,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":498,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createcompanydto",{"_index":501,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["passport",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["patch",{"_index":294,"title":{},"body":{"controllers/CompanyController.html":{}}}],["patch(':id",{"_index":292,"title":{},"body":{"controllers/CompanyController.html":{}}}],["path",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perusahaan",{"_index":326,"title":{},"body":{"injectables/CompanyService.html":{}}}],["phone",{"_index":340,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["please",{"_index":589,"title":{},"body":{"index.html":{}}}],["post",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/LatihanController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["prisma.service",{"_index":409,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":419,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":411,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":43,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":197,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["production",{"_index":570,"title":{},"body":{"index.html":{}}}],["profile",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":547,"title":{},"body":{"index.html":{}}}],["project",{"_index":581,"title":{},"body":{"index.html":{}}}],["properties",{"_index":337,"title":{"properties.html":{}},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateTaskDTO.html":{},"properties.html":{}}}],["property",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["put",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{}}}],["put('/:task_id",{"_index":467,"title":{},"body":{"controllers/TaskController.html":{}}}],["read",{"_index":590,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["reflect",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":99,"title":{"classes/RegisterDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["remove",{"_index":277,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["remove(@param('id",{"_index":310,"title":{},"body":{"controllers/CompanyController.html":{}}}],["remove(id",{"_index":287,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["repository",{"_index":560,"title":{},"body":{"index.html":{}}}],["req",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["req.user.id",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":565,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":552,"title":{},"body":{"index.html":{}}}],["secret",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":553,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":554,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateTaskDTO.html":{},"index.html":{}}}],["sponsors",{"_index":584,"title":{},"body":{"index.html":{}}}],["src/.../jwt.config.ts",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":459,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":148,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:10",{"_index":157,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:6",{"_index":153,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:108",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:13",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:62",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:83",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":396,"title":{},"body":{"classes/LoginDTO.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":398,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/auth/dto/login.dto.ts:18",{"_index":400,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":424,"title":{},"body":{"classes/RegisterDTO.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:12",{"_index":426,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/dto/register.dto.ts:16",{"_index":425,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/dto/register.dto.ts:22",{"_index":428,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/company/company.controller.ts",{"_index":273,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["src/company/company.controller.ts:22",{"_index":282,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:27",{"_index":283,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:32",{"_index":286,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:37",{"_index":293,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:42",{"_index":289,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.module.ts",{"_index":315,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/company/company.service.ts",{"_index":317,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/company/company.service.ts:10",{"_index":320,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:20",{"_index":321,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:28",{"_index":322,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:40",{"_index":324,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:53",{"_index":323,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:7",{"_index":318,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/dto/create",{"_index":335,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/company/dto/update",{"_index":497,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/company/entities/company.entity.ts",{"_index":271,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/config/jwt.config",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt.config.ts",{"_index":519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":382,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:9",{"_index":385,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":392,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":394,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:5",{"_index":395,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":408,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":410,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":416,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":418,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/task/dto/create.task.dto.ts",{"_index":354,"title":{},"body":{"classes/CreateTaskDTO.html":{},"coverage.html":{}}}],["src/task/dto/create.task.dto.ts:12",{"_index":360,"title":{},"body":{"classes/CreateTaskDTO.html":{}}}],["src/task/dto/create.task.dto.ts:4",{"_index":358,"title":{},"body":{"classes/CreateTaskDTO.html":{}}}],["src/task/dto/create.task.dto.ts:8",{"_index":361,"title":{},"body":{"classes/CreateTaskDTO.html":{}}}],["src/task/dto/update.task.dto.ts",{"_index":502,"title":{},"body":{"classes/UpdateTaskDTO.html":{},"coverage.html":{}}}],["src/task/dto/update.task.dto.ts:12",{"_index":505,"title":{},"body":{"classes/UpdateTaskDTO.html":{}}}],["src/task/dto/update.task.dto.ts:4",{"_index":503,"title":{},"body":{"classes/UpdateTaskDTO.html":{}}}],["src/task/dto/update.task.dto.ts:8",{"_index":506,"title":{},"body":{"classes/UpdateTaskDTO.html":{}}}],["src/task/task.controller.ts",{"_index":431,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:25",{"_index":440,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:31",{"_index":446,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:37",{"_index":449,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:44",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:50",{"_index":443,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":476,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":478,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:15",{"_index":481,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:26",{"_index":483,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:38",{"_index":484,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:50",{"_index":485,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:63",{"_index":482,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:9",{"_index":479,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":566,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":569,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":571,"title":{},"body":{"index.html":{}}}],["started",{"_index":546,"title":{"index.html":{}},"body":{}}],["starter",{"_index":559,"title":{},"body":{"index.html":{}}}],["statements",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":593,"title":{},"body":{"index.html":{}}}],["storage",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/LatihanService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateTaskDTO.html":{}}}],["sub",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["sudah",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":164,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":585,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":604,"title":{},"body":{"modules.html":{}}}],["table",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":432,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.controller",{"_index":477,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.service",{"_index":456,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":356,"title":{},"body":{"classes/CreateTaskDTO.html":{},"classes/UpdateTaskDTO.html":{}}}],["task_id",{"_index":444,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task_name",{"_index":357,"title":{},"body":{"classes/CreateTaskDTO.html":{},"classes/UpdateTaskDTO.html":{}}}],["taskcontroller",{"_index":430,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":44,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["taskservice",{"_index":455,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["terdaftar",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["test",{"_index":574,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":577,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":576,"title":{},"body":{"index.html":{}}}],["tests",{"_index":573,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":583,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":421,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":422,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.companyservice.create(createcompanydto",{"_index":304,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.findall",{"_index":305,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.findone(+id",{"_index":307,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.remove(+id",{"_index":311,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.update(+id",{"_index":309,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.generatejwt",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.getlatihan",{"_index":389,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.prisma.companies.create",{"_index":325,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.prisma.companies.delete",{"_index":333,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.prisma.companies.findfirst",{"_index":330,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.prisma.companies.findmany",{"_index":329,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.prisma.companies.update",{"_index":331,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.prisma.tasks.create",{"_index":491,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":496,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":494,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":493,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":495,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":490,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.taskservice.createtask(body",{"_index":462,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+task_id",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+task_id",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":165,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["tidak",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":594,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":600,"title":{},"body":{"index.html":{}}}],["type",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":500,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":558,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":159,"title":{},"body":{"classes/AuthGuard.html":{}}}],["unit",{"_index":572,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":613,"title":{},"body":{"properties.html":{}}}],["update",{"_index":278,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["update(@param('id",{"_index":308,"title":{},"body":{"controllers/CompanyController.html":{}}}],["update(id",{"_index":290,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["updateavatar",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatecompanydto",{"_index":291,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatetaskbyid",{"_index":437,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":450,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":451,"title":{"classes/UpdateTaskDTO.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{}}}],["upload",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":442,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":445,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":448,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('profile",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@useinterceptors(undefined)@post('avatar",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@post",{"_index":439,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@usepipes(validationpipe)@put('/:task_id",{"_index":452,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/TaskController.html":{}}}],["usepipes(validationpipe)@post",{"_index":281,"title":{},"body":{"controllers/CompanyController.html":{}}}],["usepipes(validationpipe)@post('login",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(validationpipe)@post('register",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":156,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["userpassword",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofile",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.email",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.id",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.name",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["users.password",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/TaskController.html":{}}}],["validator",{"_index":352,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/UpdateTaskDTO.html":{},"dependencies.html":{}}}],["value",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":614,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":611,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":567,"title":{},"body":{"index.html":{}}}],["website",{"_index":598,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":588,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LatihanModule } from './latihan/latihan.module';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { CompanyModule } from './company/company.module';\n\n@Module({\n  imports: [\n    LatihanModule,\n    TaskModule,\n    PrismaModule,\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    CompanyModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello Heru!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(ValidationPipe)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(ValidationPipe)@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Req,\n  UsePipes,\n  UseGuards,\n  ValidationPipe,\n  UseInterceptors,\n  UploadedFile,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDTO } from './dto/register.dto';\nimport { LoginDTO } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @UsePipes(ValidationPipe)\n  @Post('register')\n  async register(@Body() data: RegisterDTO) {\n    return await this.authService.register(data);\n  }\n\n  @UsePipes(ValidationPipe)\n  @Post('login')\n  async login(@Body() data: LoginDTO) {\n    return await this.authService.login(data);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async profile(@Req() req) {\n    return await this.authService.profile(req.user.id);\n  }\n\n  @UseGuards(AuthGuard)\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Post('avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.authService.uploadAvatar(\n      req.user.id,\n      '/uploads/image/' + file.filename,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\n\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt.config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    avatar\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDTO } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDTO } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt.config';\n\n@Injectable()\nexport class AuthService {\n  constructor(private prisma: PrismaService, private jwtService: JwtService) {}\n\n  async register(data: RegisterDTO) {\n    const users = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (users) {\n      throw new HttpException('Email sudah terdaftar', HttpStatus.FOUND);\n    }\n    data.password = await hash(data.password, 12);\n    await this.prisma.users.create({\n      data,\n    });\n    return {\n      statusCode: HttpStatus.CREATED,\n      message: 'Register berhasil',\n    };\n  }\n\n  async login(data: LoginDTO) {\n    const users = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (!users) {\n      throw new HttpException('Pengguna tidak ditemukan', HttpStatus.NOT_FOUND);\n    }\n\n    const userPassword = await compare(data.password, users.password);\n    if (userPassword) {\n      const accessToken = this.generateJWT({\n        sub: users.id,\n        name: users.name,\n        email: users.email,\n      });\n      return {\n        statusCode: 200,\n        token: accessToken,\n        message: 'Login berhasil',\n      };\n    } else {\n      throw new HttpException(\n        'Email atau password tidak cocok',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n  }\n\n  async profile(user_id: number) {\n    const userProfile = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n      select: {\n        name: true,\n        email: true,\n        avatar: true,\n        tasks: true,\n      },\n    });\n    if (userProfile) {\n      return {\n        statusCode: HttpStatus.OK,\n        data: userProfile,\n      };\n    }\n    throw new HttpException('User Not Found', HttpStatus.NOT_FOUND);\n  }\n\n  async uploadAvatar(user_id: number, avatar) {\n    const user = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n    });\n    if (user) {\n      const updateAvatar = await this.prisma.users.update({\n        data: {\n          avatar: avatar,\n        },\n        where: {\n          id: user_id,\n        },\n      });\n      if (updateAvatar) {\n        return {\n          statusCode: HttpStatus.CREATED,\n          message: 'Upload avatar berhasil',\n        };\n      }\n    }\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n\n  generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/entities/company.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Company {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                company\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCompanyDto: CreateCompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(ValidationPipe)@Post()\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCompanyDto\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id, updateCompanyDto: UpdateCompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCompanyDto\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\n\n@Controller('company')\nexport class CompanyController {\n  constructor(private readonly companyService: CompanyService) {}\n\n  @UsePipes(ValidationPipe)\n  @Post()\n  async create(@Body() createCompanyDto: CreateCompanyDto) {\n    return await this.companyService.create(createCompanyDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.companyService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id) {\n    return await this.companyService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id, @Body() updateCompanyDto: UpdateCompanyDto) {\n    return await this.companyService.update(+id, updateCompanyDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id) {\n    return await this.companyService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_CompanyModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyModule -->\n\nPrismaModule->CompanyModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/company/company.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CompanyController } from './company.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [CompanyController],\n  providers: [CompanyService],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/company/company.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateCompanyDto)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, data: UpdateCompanyDto)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateCompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class CompanyService {\n  constructor(private prisma: PrismaService) {}\n\n  async create(data: CreateCompanyDto) {\n    await this.prisma.companies.create({\n      data,\n    });\n    return {\n      statusCode: HttpStatus.CREATED,\n      message: 'Data perusahaan berhasil dibuat',\n    };\n  }\n\n  async findAll() {\n    const companies = await this.prisma.companies.findMany();\n    return {\n      statusCode: HttpStatus.OK,\n      data: companies,\n    };\n  }\n\n  async findOne(id: number) {\n    const company = await this.prisma.companies.findFirst({\n      where: {\n        id: id,\n      },\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      data: company,\n    };\n  }\n\n  async update(id: number, data: UpdateCompanyDto) {\n    await this.prisma.companies.update({\n      where: {\n        id: id,\n      },\n      data: data,\n    });\n    return {\n      statusCode: HttpStatus.CREATED,\n      message: 'Data perusahaan berhasil diperbarui',\n    };\n  }\n\n  async remove(id: number) {\n    await this.prisma.companies.delete({\n      where: {\n        id: id,\n      },\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'Data perusahaan berhasil dihapus',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                company_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        company_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsString()\n  @IsNotEmpty()\n  company_name: string;\n\n  @IsString()\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  address?: string;\n\n  @IsString()\n  @IsOptional()\n  phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDTO.html":{"url":"classes/CreateTaskDTO.html","title":"class - CreateTaskDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create.task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create.task.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create.task.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create.task.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class CreateTaskDTO {\n  id_user: number;\n\n  @IsNotEmpty()\n  @IsString()\n  task_name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/jwt.config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      email: payload.email,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/latihan/latihan.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LatihanService } from './latihan.service';\n\n@Controller('latihan')\nexport class LatihanController {\n  constructor(private latihanService: LatihanService) {}\n\n  @Get()\n  getLatihan() {\n    return this.latihanService.getLatihan();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LatihanController } from './latihan.controller';\nimport { LatihanService } from './latihan.service';\n\n@Module({\n  controllers: [LatihanController],\n  providers: [LatihanService]\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \ngetLatihan()\n                \n            \n\n\n            \n                \n                    Defined in src/latihan/latihan.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LatihanService {\n  getLatihan() {\n    return {\n      message: 'Latihan',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDTO.html":{"url":"classes/LoginDTO.html","title":"class - LoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsEmail,\n  MinLength,\n  MaxLength,\n} from 'class-validator';\n\nexport class LoginDTO {\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDTO.html":{"url":"classes/RegisterDTO.html","title":"class - RegisterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(8)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MinLength,\n  MaxLength,\n  IsNotEmpty,\n  IsString,\n  IsEmail,\n} from 'class-validator';\n\nexport class RegisterDTO {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(body: CreateTaskDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Post()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateTaskDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id, body: UpdateTaskDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UsePipes(ValidationPipe)@Put('/:task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                UpdateTaskDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDTO } from './dto/create.task.dto';\nimport { UpdateTaskDTO } from './dto/update.task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n  constructor(private taskService: TaskService) {}\n\n  @UseGuards(AuthGuard)\n  @UsePipes(ValidationPipe)\n  @Post()\n  async createTask(@Body() body: CreateTaskDTO) {\n    return await this.taskService.createTask(body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get()\n  async getAllTask() {\n    return await this.taskService.getAllTask();\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('/:task_id')\n  async getTaskById(@Param('task_id') task_id) {\n    return await this.taskService.getTaskById(+task_id);\n  }\n\n  @UseGuards(AuthGuard)\n  @UsePipes(ValidationPipe)\n  @Put('/:task_id')\n  async updateTaskById(@Param('task_id') task_id, @Body() body: UpdateTaskDTO) {\n    return await this.taskService.updateTaskById(+task_id, body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete('/:task_id')\n  async deleteTaskById(@Param('task_id') task_id) {\n    return await this.taskService.deleteTaskById(+task_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(data: CreateTaskDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTaskDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskById(task_id)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id: number, data: UpdateTaskDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateTaskDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateTaskDTO } from './dto/create.task.dto';\nimport { UpdateTaskDTO } from './dto/update.task.dto';\nimport { REQUEST } from '@nestjs/core';\nimport { Inject } from '@nestjs/common';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(REQUEST) private req: any,\n  ) {}\n\n  async createTask(data: CreateTaskDTO) {\n    data.id_user = this.req.user.id;\n    await this.prisma.tasks.create({\n      data: data,\n    });\n    return {\n      statusCode: HttpStatus.CREATED,\n      message: 'Data task berhasil ditambahkan',\n    };\n  }\n\n  async getAllTask() {\n    const task = await this.prisma.tasks.findMany({\n      where: {\n        id_user: this.req.user.id,\n      },\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      data: task,\n    };\n  }\n\n  async getTaskById(task_id: number) {\n    const task = await this.prisma.tasks.findFirst({\n      where: {\n        id: task_id,\n        id_user: this.req.user.id,\n      },\n    });\n    return {\n      data: task,\n    };\n  }\n\n  async updateTaskById(task_id: number, data: UpdateTaskDTO) {\n    data.id_user = this.req.user.id;\n    await this.prisma.tasks.update({\n      where: {\n        id: task_id,\n      },\n      data: data,\n    });\n    return {\n      message: 'Data task berhasil diperbarui',\n    };\n  }\n\n  async deleteTaskById(task_id) {\n    await this.prisma.tasks.delete({\n      where: {\n        id: task_id,\n      },\n    });\n    return {\n      message: 'Data task berhasil dihapus',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDTO.html":{"url":"classes/UpdateTaskDTO.html","title":"class - UpdateTaskDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update.task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update.task.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update.task.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update.task.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional } from 'class-validator';\n\nexport class UpdateTaskDTO {\n  id_user: number;\n\n  @IsOptional()\n  @IsString()\n  task_name: string;\n\n  @IsOptional()\n  @IsString()\n  task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/company/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/company/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/company/entities/company.entity.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/task/dto/create.task.dto.ts\n            \n            class\n            CreateTaskDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update.task.dto.ts\n            \n            class\n            UpdateTaskDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @prisma/client : ^4.15.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma : ^4.15.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nCompanyModule -->\n\nPrismaModule->CompanyModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'efbgwkgrukeghiuhusabvaubUUVubveudbvur',\n  expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
